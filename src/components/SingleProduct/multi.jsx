// Code Generated by Sidekick is for learning and experimentation purposes only.

import React, { useState } from 'react';
import productsData from './data/multi.js';
import './multi.css';



const ProductTabs = ({ tabsData }) => {
  const [selected, setSelected] = useState(0);
  return (
    <div className="tabs-wrap">
      <div className="tabs-header">
        {tabsData.map((tab, i) => (
          <button
            key={tab.label}
            className={`tab-btn${selected === i ? " active" : ""}`}
            onClick={() => setSelected(i)}
          >
            {tab.label}
          </button>
        ))}
      </div>
      <div className="tabs-content">
        {/* Render tab content, handles reviews differently */}
        {tabsData[selected].label !== "REVIEWS" ? (
          <div>
            <b>{tabsData[selected].content.headline}</b>
            {tabsData[selected].content.paragraphs && tabsData[selected].content.paragraphs.map((p, idx) => <p key={idx}>{p}</p>)}
            {tabsData[selected].content.list && (
              <ul>
                {tabsData[selected].content.list.map((l, idx) => <li key={idx}>{l}</li>)}
              </ul>
            )}
            {tabsData[selected].content.returns && (
              <>
                <b>{tabsData[selected].content.returns.headline}</b>
                <p>{tabsData[selected].content.returns.text}</p>
                <b>{tabsData[selected].content.shipping.headline}</b>
                <p>{tabsData[selected].content.shipping.text}</p>
              </>
            )}
          </div>
        ) : (
          <div>
            <div className="reviews-list">
              {tabsData[selected].content.reviews.map((review, idx) => (
                <div className="review-item" key={idx}>
                  <div className={review.avatarClass} />
                  <div>
                    <div className="review-stars">{review.stars} <span>({review.rating})</span></div>
                    <div className="review-meta">{review.author} – {review.date}</div>
                    <div className="review-text">{review.text}</div>
                  </div>
                </div>
              ))}
            </div>
            <form className="review-form">
              <h4>{tabsData[selected].content.reviewForm.headline}</h4>
              <div className="form-row">
                <div>Your rating * <span className="review-stars">★ ★ ★ ☆ ☆ ({tabsData[selected].content.reviewForm.rating})</span></div>
                <input type="file" />
              </div>
              <div className="form-row">
                <textarea placeholder="Write your review here" rows={3}></textarea>
              </div>
              <div className="form-row">
                <input type="text" placeholder="Your Name" required />
              </div>
              <div className="form-row">
                <input type="email" placeholder="Your Email" required />
              </div>
              <div className="form-row">
                <label>
                  <input type="checkbox" /> Save my info for next time.
                </label>
              </div>
              <button className="submit-btn">SUBMIT</button>
            </form>
          </div>
        )}
      </div>
    </div>
  );
};

const MultiProductPage = () => {
  const [selectedProductIdx, setSelectedProductIdx] = useState(0);
  const product = productsData[selectedProductIdx];
  const [selectedImage, setSelectedImage] = useState(product.galleryImages[0]);
  const [quantity, setQuantity] = useState(1);

  // Change product resets image and quantity
  const handleProductChange = (idx) => {
    setSelectedProductIdx(idx);
    setSelectedImage(productsData[idx].galleryImages[0]);
    setQuantity(1);
  };

  return (
    <div className="page-bg">
      {/* Product Select Row */}
      <div style={{ marginBottom: 32 }}>
        {productsData.map((prod, idx) => (
          <button
            key={prod.productOverview.title}
            className={`cart-btn${selectedProductIdx === idx ? ' selected' : ''}`}
            style={{ margin: '6px' }}
            onClick={() => handleProductChange(idx)}
          >
            {prod.productOverview.title}
          </button>
        ))}
      </div>
      <div className="main-product-card">
        {/* LEFT: Image Section */}
        <div className="gallery-col">
          <div className="main-image-container">
            <img src={selectedImage} alt="Selected Product" className="main-img" />
          </div>
          <div className="thumb-row">
            {product.galleryImages.map((img, idx) => (
              <img
                key={idx}
                src={img}
                alt={`Thumb ${idx + 1}`}
                className={`thumb-img${selectedImage === img ? ' selected' : ''}`}
                onClick={() => setSelectedImage(img)}
              />
            ))}
          </div>
        </div>
        {/* RIGHT: Product Info Section */}
        <div className="info-col">
          <h1 className="donut-title">{product.productOverview.title}</h1>
          <div className="donut-rating">
            <span className="star">{product.productOverview.ratingStars}</span>
            <span className="rating-value">({product.productOverview.rating})</span>
          </div>
          <div className="price-block">
            <span className="price">${product.productOverview.price.toFixed(2)}</span>
            <span className="old-price">${product.productOverview.oldPrice.toFixed(2)}</span>
          </div>
          <div className="donut-description">
            {product.productOverview.description}
          </div>
          <div className="donut-stock">
            Only <b>{product.productOverview.stock}</b> left in stock!
          </div>
          <div className="qty-cart-row">
            <button
              className="qty-btn"
              aria-label="Decrease quantity"
              onClick={() => setQuantity(q => Math.max(1, q - 1))}
            >–</button>
            <span className="quantity">{quantity}</span>
            <button
              className="qty-btn"
              aria-label="Increase quantity"
              onClick={() => setQuantity(q => q + 1)}
            >+</button>
            <button className="cart-btn">Add to Cart</button>
          </div>
        </div>
      </div>
      {/* <ProductTabs tabsData={product.tabsData} /> */}
    </div>
  );
};

export default MultiProductPage;
