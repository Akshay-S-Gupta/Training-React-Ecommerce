// Code Generated by Sidekick is for learning and experimentation purposes only.
import React, { createContext, useState } from "react";

export const CartContext = createContext();

export const CartProvider = ({ children }) => {
  const [cartProducts, setCartProducts] = useState([]);

  const addToCart = product => {
    setCartProducts(prev => {
      // If product exists, increment quantity, else add as new
      const found = prev.find(item => item.id === product.id);
      if (found) {
        return prev.map(item =>
          item.id === product.id
            ? { ...item, quantity: item.quantity + 1 }
            : item
        );
      }
      return [...prev, { ...product, quantity: 1 }];
    });
  };

  const removeFromCart = id =>
    setCartProducts(prev => prev.filter(item => item.id !== id));

  const updateCartItem = (id, qty) =>
    setCartProducts(prev =>
      prev.map(item =>
        item.id === id ? { ...item, quantity: qty } : item
      )
    );

  return (
    <CartContext.Provider value={{ cartProducts, addToCart, removeFromCart, updateCartItem }}>
      {children}
    </CartContext.Provider>
  );
};
